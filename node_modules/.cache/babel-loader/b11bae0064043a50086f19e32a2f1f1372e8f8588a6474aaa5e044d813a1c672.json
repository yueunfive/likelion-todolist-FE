{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/toy-project/todolist/src/pages/TodoPage.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../component/Header\";\nimport TodoEditor from \"../component/TodoEditor\";\nimport TodoList from \"../component/TodoList\";\nimport styles from \"./TodoPage.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockTodo = [{\n  id: 0,\n  is_checked: false,\n  content: \"React 공부하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 1,\n  is_checked: false,\n  content: \"Spring 공부하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 2,\n  is_checked: false,\n  content: \"독서하기\",\n  createdDate: new Date().getTime()\n}];\nfunction TodoPage() {\n  _s();\n  const {\n    date\n  } = useParams(); // url의 \":date\" 부분에서 날짜 따옴\n  const idRef = useRef(3); // Ref 객체는 리액트에서 주로 돔을 조작할 때 사용하지만, 컴포넌트의 변수로도 자주 활용한다.\n  const [todo, setTodo] = useState(mockTodo); // 일정 데이터\n\n  // 아이템 추가 함수\n  const onCreate = content => {\n    const newItem = {\n      id: idRef.current,\n      content,\n      is_checked: false,\n      createdDate: new Date().getTime()\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current++;\n  };\n\n  // 아이템 체크 함수\n  const onUpdate = targetId => {\n    setTodo(todo.map(it => it.id === targetId ? {\n      ...it,\n      is_checked: !it.is_checked\n    } : it));\n  };\n\n  // 아이템 삭제 함수\n  const onDelete = targetId => {\n    setTodo(todo.filter(it => it.id !== targetId));\n  };\n\n  // 아이템 수정 함수\n  const onEdit = (targetId, newContent) => {\n    setTodo(todo.map(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TodoPage,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate,\n      onDelete: onDelete,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoPage, \"z0beHNh1nDc8e27x40o5JWUaAOs=\", false, function () {\n  return [useParams];\n});\n_c = TodoPage;\nexport default TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["Header","TodoEditor","TodoList","styles","useState","useRef","useParams","jsxDEV","_jsxDEV","mockTodo","id","is_checked","content","createdDate","Date","getTime","TodoPage","_s","date","idRef","todo","setTodo","onCreate","newItem","current","onUpdate","targetId","map","it","onDelete","filter","onEdit","newContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/toy-project/todolist/src/pages/TodoPage.jsx"],"sourcesContent":["import Header from \"../component/Header\";\nimport TodoEditor from \"../component/TodoEditor\";\nimport TodoList from \"../component/TodoList\";\nimport styles from \"./TodoPage.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst mockTodo = [\n  {\n    id: 0,\n    is_checked: false,\n    content: \"React 공부하기\",\n    createdDate: new Date().getTime(),\n  },\n  {\n    id: 1,\n    is_checked: false,\n    content: \"Spring 공부하기\",\n    createdDate: new Date().getTime(),\n  },\n  {\n    id: 2,\n    is_checked: false,\n    content: \"독서하기\",\n    createdDate: new Date().getTime(),\n  },\n];\n\nfunction TodoPage() {\n  const { date } = useParams(); // url의 \":date\" 부분에서 날짜 따옴\n  const idRef = useRef(3); // Ref 객체는 리액트에서 주로 돔을 조작할 때 사용하지만, 컴포넌트의 변수로도 자주 활용한다.\n  const [todo, setTodo] = useState(mockTodo); // 일정 데이터\n\n  // 아이템 추가 함수\n  const onCreate = (content) => {\n    const newItem = {\n      id: idRef.current,\n      content,\n      is_checked: false,\n      createdDate: new Date().getTime(),\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current++;\n  };\n\n  // 아이템 체크 함수\n  const onUpdate = (targetId) => {\n    setTodo(\n      todo.map((it) =>\n        it.id === targetId ? { ...it, is_checked: !it.is_checked } : it\n      )\n    );\n  };\n\n  // 아이템 삭제 함수\n  const onDelete = (targetId) => {\n    setTodo(todo.filter((it) => it.id !== targetId));\n  };\n\n  // 아이템 수정 함수\n  const onEdit = (targetId, newContent) => {\n    setTodo(\n      todo.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className={styles.TodoPage}>\n      <Header date={date} />\n      <TodoEditor onCreate={onCreate} />\n      <TodoList\n        todo={todo}\n        onUpdate={onUpdate}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    </div>\n  );\n}\n\nexport default TodoPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}