{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/lecture-code/winterlood-react/todolist/src/component/TodoItem.js\",\n  _s = $RefreshSig$();\nimport \"./TodoItem.css\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  id,\n  content,\n  isDone,\n  createdDate,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  const onChangeCheckbox = () => {\n    onUpdate(id);\n  };\n  const onClickDelete = () => {\n    onDelete(id);\n  };\n  const onEdit = targetId => {\n    map(it => it.id === action.targetId ? {\n      ...it,\n      content: action.newContent\n    } : it);\n  };\n  let style1 = {\n    color: \"black\"\n  };\n  let style2 = {\n    color: \"gray\",\n    textDecorationLine: \"line-through\"\n  };\n  const [isEdit, setIsEdit] = useState(false); // isEdit ? 수정중 : 수정중 X\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n\n  // 수정 입력창에 적은 데이터\n  // 수정버튼 클릭 -> 일기 본문에 적혀져있던 content값이 나오도록 초기값 설정\n  const [localContent, setLocalContent] = useState(content);\n  const localContentInput = useRef();\n\n  // 수정 취소 버튼을 눌렀을 때 실행되는 함수\n  // 수정 -> 수정취소 -> 수정 : 원래 content값이 나오도록 하는 함수(초기화)\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content); // 수정입력창에 적은 데이터를 원래 일기 본문 데이터로 초기화\n  };\n\n  //수정 완료 버튼을 눌렀을 떄 실행되는 함수\n  const handleEdit = () => {\n    // 수정한 데이터의 길이가 1글자 미만시 수정입력창 focus\n    if (localContent.length < 1) {\n      localContentInput.current.focus();\n      return;\n    }\n    onEdit(id, localContent); // id(타겟아이디), localContent(새로 바뀌는 컨텐츠)를 onEdit 함수에 인자로 전달\n    toggleIsEdit(); // isEdit를 true에서 false로 반환시켜서 수정폼을 닫기.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox_col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeCheckbox,\n        checked: isDone,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title_col\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: isDone ? style2 : style1,\n        children: isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: localContentInput,\n            value: localContent,\n            onChange: e => {\n              setLocalContent(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: content\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date_col\",\n      children: new Date(createdDate).toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn_col\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickDelete,\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"HbsZjZThsAjDTGlbgjyz5psygIw=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","id","content","isDone","createdDate","onUpdate","onDelete","_s","onChangeCheckbox","onClickDelete","onEdit","targetId","map","it","action","newContent","style1","color","style2","textDecorationLine","isEdit","setIsEdit","toggleIsEdit","localContent","setLocalContent","localContentInput","handleQuitEdit","handleEdit","length","current","focus","className","children","onChange","checked","type","fileName","_jsxFileName","lineNumber","columnNumber","style","ref","value","e","target","Date","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/lecture-code/winterlood-react/todolist/src/component/TodoItem.js"],"sourcesContent":["import \"./TodoItem.css\";\nimport { useState, useRef } from \"react\";\n\nconst TodoItem = ({ id, content, isDone, createdDate, onUpdate, onDelete }) => {\n  const onChangeCheckbox = () => {\n    onUpdate(id);\n  };\n\n  const onClickDelete = () => {\n    onDelete(id);\n  };\n\n  const onEdit = (targetId) => {\n    map((it) =>\n      it.id === action.targetId ? { ...it, content: action.newContent } : it\n    );\n  };\n\n  let style1 = { color: \"black\" };\n  let style2 = { color: \"gray\", textDecorationLine: \"line-through\" };\n\n  const [isEdit, setIsEdit] = useState(false); // isEdit ? 수정중 : 수정중 X\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n\n  // 수정 입력창에 적은 데이터\n  // 수정버튼 클릭 -> 일기 본문에 적혀져있던 content값이 나오도록 초기값 설정\n  const [localContent, setLocalContent] = useState(content);\n\n  const localContentInput = useRef();\n\n  // 수정 취소 버튼을 눌렀을 때 실행되는 함수\n  // 수정 -> 수정취소 -> 수정 : 원래 content값이 나오도록 하는 함수(초기화)\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content); // 수정입력창에 적은 데이터를 원래 일기 본문 데이터로 초기화\n  };\n\n  //수정 완료 버튼을 눌렀을 떄 실행되는 함수\n  const handleEdit = () => {\n    // 수정한 데이터의 길이가 1글자 미만시 수정입력창 focus\n    if (localContent.length < 1) {\n      localContentInput.current.focus();\n      return;\n    }\n    onEdit(id, localContent); // id(타겟아이디), localContent(새로 바뀌는 컨텐츠)를 onEdit 함수에 인자로 전달\n    toggleIsEdit(); // isEdit를 true에서 false로 반환시켜서 수정폼을 닫기.\n  };\n\n  return (\n    <div className=\"TodoItem\">\n      <div className=\"checkbox_col\">\n        <input onChange={onChangeCheckbox} checked={isDone} type=\"checkbox\" />\n      </div>\n      <div className=\"title_col\">\n        <span style={isDone ? style2 : style1}>\n          {isEdit ? (\n            <>\n              <textarea\n                ref={localContentInput}\n                value={localContent}\n                onChange={(e) => {\n                  setLocalContent(e.target.value);\n                }}\n              />\n            </>\n          ) : (\n            <>{content}</>\n          )}\n        </span>\n      </div>\n      <div className=\"date_col\">\n        {new Date(createdDate).toLocaleDateString()}\n      </div>\n      <div className=\"btn_col\">\n        <button onClick={onClickDelete}>삭제</button>\n      </div>\n    </div>\n  );\n};\nexport default TodoItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}