{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/client/src/component/TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport Emoji from \"./Emoji\";\nimport styles from \"./TodoItem.module.css\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  _id,\n  content,\n  is_checked,\n  date,\n  emoji,\n  onCheck,\n  onDelete,\n  onEdit,\n  onReview\n}) => {\n  _s();\n  const onChangeCheckbox = () => {\n    onCheck(_id);\n  };\n  const onClickDelete = () => {\n    onDelete(_id);\n  };\n  let style1 = {\n    color: \"black\"\n  };\n  let style2 = {\n    color: \"gray\",\n    textDecorationLine: \"line-through\"\n  };\n  const [isEdit, setIsEdit] = useState(false); // isEdit ? 수정중 : 수정중 X\n  const [feel, setFeel] = useState(false);\n  const [emojiSelection, setEmojiSelection] = useState(emoji);\n  const onSelectEmoji = selectedEmoji => {\n    setEmojiSelection(selectedEmoji); // 선택한 이모지를 상태로 관리\n    onReview(_id, selectedEmoji);\n    setFeel(false); // 이모지 목록 숨기기\n  };\n\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n\n  // 수정 입력창에 적은 데이터\n  // 수정버튼 클릭 -> 일기 본문에 적혀져있던 content값이 나오도록 초기값 설정\n  const [localContent, setLocalContent] = useState(content);\n  const localContentInput = useRef();\n\n  // 수정 취소 버튼을 눌렀을 때 실행되는 함수\n  // 수정 -> 수정취소 -> 수정 : 원래 content값이 나오도록 하는 함수(초기화)\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content); // 수정입력창에 적은 데이터를 원래 일기 본문 데이터로 초기화\n  };\n\n  // 수정 완료 버튼을 눌렀을 떄 실행되는 함수\n  const handleEdit = () => {\n    // 수정한 데이터의 길이가 1글자 미만시 수정입력창 focus\n    if (localContent.length < 1) {\n      localContentInput.current.focus();\n      return;\n    }\n    onEdit(_id, localContent); // _id(타겟아이디), localContent(새로 바뀌는 컨텐츠)를 onEdit 함수에 인자로 전달\n    toggleIsEdit(); // isEdit를 true에서 false로 반환시켜서 수정폼을 닫기.\n  };\n\n  // enter 키를 눌러 수정 완료하기\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      handleEdit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TodoItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.checkbox_col,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeCheckbox,\n        checked: is_checked,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title_col,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: is_checked ? style2 : style1,\n        children: isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: localContentInput,\n            value: localContent,\n            onChange: e => {\n              setLocalContent(e.target.value);\n            },\n            onKeyDown: onKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: content\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btn_col,\n      children: isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleQuitEdit,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFeel(!feel),\n          children: [emojiSelection === \"\" ? \"감정\" : emojiSelection, feel && /*#__PURE__*/_jsxDEV(Emoji, {\n            onSelectEmoji: onSelectEmoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleIsEdit,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickDelete,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"sNvXtz9ZBcgPuU7/wOlRmW93oQA=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["Emoji","styles","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_id","content","is_checked","date","emoji","onCheck","onDelete","onEdit","onReview","_s","onChangeCheckbox","onClickDelete","style1","color","style2","textDecorationLine","isEdit","setIsEdit","feel","setFeel","emojiSelection","setEmojiSelection","onSelectEmoji","selectedEmoji","toggleIsEdit","localContent","setLocalContent","localContentInput","handleQuitEdit","handleEdit","length","current","focus","onKeyDown","e","keyCode","className","children","checkbox_col","onChange","checked","type","fileName","_jsxFileName","lineNumber","columnNumber","title_col","style","ref","value","target","btn_col","onClick","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/client/src/component/TodoItem.jsx"],"sourcesContent":["import Emoji from \"./Emoji\";\nimport styles from \"./TodoItem.module.css\";\nimport { useState, useRef } from \"react\";\n\nconst TodoItem = ({\n  _id,\n  content,\n  is_checked,\n  date,\n  emoji,\n  onCheck,\n  onDelete,\n  onEdit,\n  onReview,\n}) => {\n  const onChangeCheckbox = () => {\n    onCheck(_id);\n  };\n\n  const onClickDelete = () => {\n    onDelete(_id);\n  };\n\n  let style1 = { color: \"black\" };\n  let style2 = { color: \"gray\", textDecorationLine: \"line-through\" };\n\n  const [isEdit, setIsEdit] = useState(false); // isEdit ? 수정중 : 수정중 X\n  const [feel, setFeel] = useState(false);\n  const [emojiSelection, setEmojiSelection] = useState(emoji);\n\n  const onSelectEmoji = (selectedEmoji) => {\n    setEmojiSelection(selectedEmoji); // 선택한 이모지를 상태로 관리\n    onReview(_id, selectedEmoji);\n    setFeel(false); // 이모지 목록 숨기기\n  };\n\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n\n  // 수정 입력창에 적은 데이터\n  // 수정버튼 클릭 -> 일기 본문에 적혀져있던 content값이 나오도록 초기값 설정\n  const [localContent, setLocalContent] = useState(content);\n\n  const localContentInput = useRef();\n\n  // 수정 취소 버튼을 눌렀을 때 실행되는 함수\n  // 수정 -> 수정취소 -> 수정 : 원래 content값이 나오도록 하는 함수(초기화)\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content); // 수정입력창에 적은 데이터를 원래 일기 본문 데이터로 초기화\n  };\n\n  // 수정 완료 버튼을 눌렀을 떄 실행되는 함수\n  const handleEdit = () => {\n    // 수정한 데이터의 길이가 1글자 미만시 수정입력창 focus\n    if (localContent.length < 1) {\n      localContentInput.current.focus();\n      return;\n    }\n    onEdit(_id, localContent); // _id(타겟아이디), localContent(새로 바뀌는 컨텐츠)를 onEdit 함수에 인자로 전달\n    toggleIsEdit(); // isEdit를 true에서 false로 반환시켜서 수정폼을 닫기.\n  };\n\n  // enter 키를 눌러 수정 완료하기\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      handleEdit();\n    }\n  };\n\n  return (\n    <div className={styles.TodoItem}>\n      <div className={styles.checkbox_col}>\n        <input\n          onChange={onChangeCheckbox}\n          checked={is_checked}\n          type=\"checkbox\"\n        />\n      </div>\n      <div className={styles.title_col}>\n        <span style={is_checked ? style2 : style1}>\n          {/* isEdit ? 수정 입력창 : 원래 content값 */}\n          {isEdit ? (\n            <>\n              <textarea\n                ref={localContentInput}\n                value={localContent}\n                onChange={(e) => {\n                  setLocalContent(e.target.value);\n                }}\n                onKeyDown={onKeyDown}\n              />\n            </>\n          ) : (\n            <>{content}</>\n          )}\n        </span>\n      </div>\n\n      <div className={styles.btn_col}>\n        {isEdit ? (\n          <>\n            {/* 수정버튼을 눌렀을 때(isEdit === true)의 버튼들 */}\n            <button onClick={handleQuitEdit}>취소</button>\n            <button onClick={handleEdit}>완료</button>\n          </>\n        ) : (\n          <>\n            {/* 수정중이 아닐떄의 버튼들 */}\n            <button onClick={() => setFeel(!feel)}>\n              {emojiSelection === \"\" ? \"감정\" : emojiSelection}\n              {feel && <Emoji onSelectEmoji={onSelectEmoji} />}\n            </button>\n            <button onClick={toggleIsEdit}>수정</button>\n            <button onClick={onClickDelete}>삭제</button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default TodoItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}