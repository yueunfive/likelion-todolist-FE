{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/toy-project/todolist_API/src/pages/TodoPage.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../component/Header\";\nimport TodoEditor from \"../component/TodoEditor\";\nimport TodoList from \"../component/TodoList\";\nimport styles from \"./TodoPage.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoPage() {\n  _s();\n  const {\n    dateId\n  } = useParams(); // url의 \":dateId\" 부분에서 날짜 따옴\n  const idRef = useRef(3); // Ref 객체는 리액트에서 주로 돔을 조작할 때 사용하지만, 컴포넌트의 변수로도 자주 활용한다.\n  const [todo, setTodo] = useState(mockTodo); // 일정 데이터\n\n  // 아이템 추가 함수\n  const onCreate = content => {\n    const newItem = {\n      plan_id: idRef.current,\n      content,\n      is_checked: false,\n      date: new Date().getTime()\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current++;\n  };\n\n  // 아이템 체크 함수\n  const onUpdate = targetId => {\n    setTodo(todo.map(it => it.plan_id === targetId ? {\n      ...it,\n      is_checked: !it.is_checked\n    } : it));\n  };\n\n  // 아이템 삭제 함수\n  const onDelete = targetId => {\n    setTodo(todo.filter(it => it.plan_id !== targetId));\n  };\n\n  // 아이템 수정 함수\n  const onEdit = (targetId, newContent) => {\n    setTodo(todo.map(it => it.plan_id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TodoPage,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      dateId: dateId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate,\n      onDelete: onDelete,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoPage, \"uI3qpSwpq14Sb0Z+onjsNwIRsMs=\", false, function () {\n  return [useParams];\n});\n_c = TodoPage;\nexport default TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["Header","TodoEditor","TodoList","styles","useState","useRef","useParams","jsxDEV","_jsxDEV","TodoPage","_s","dateId","idRef","todo","setTodo","mockTodo","onCreate","content","newItem","plan_id","current","is_checked","date","Date","getTime","onUpdate","targetId","map","it","onDelete","filter","onEdit","newContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/toy-project/todolist_API/src/pages/TodoPage.jsx"],"sourcesContent":["import Header from \"../component/Header\";\nimport TodoEditor from \"../component/TodoEditor\";\nimport TodoList from \"../component/TodoList\";\nimport styles from \"./TodoPage.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction TodoPage() {\n  const { dateId } = useParams(); // url의 \":dateId\" 부분에서 날짜 따옴\n  const idRef = useRef(3); // Ref 객체는 리액트에서 주로 돔을 조작할 때 사용하지만, 컴포넌트의 변수로도 자주 활용한다.\n  const [todo, setTodo] = useState(mockTodo); // 일정 데이터\n\n  // 아이템 추가 함수\n  const onCreate = (content) => {\n    const newItem = {\n      plan_id: idRef.current,\n      content,\n      is_checked: false,\n      date: new Date().getTime(),\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current++;\n  };\n\n  // 아이템 체크 함수\n  const onUpdate = (targetId) => {\n    setTodo(\n      todo.map((it) =>\n        it.plan_id === targetId ? { ...it, is_checked: !it.is_checked } : it\n      )\n    );\n  };\n\n  // 아이템 삭제 함수\n  const onDelete = (targetId) => {\n    setTodo(todo.filter((it) => it.plan_id !== targetId));\n  };\n\n  // 아이템 수정 함수\n  const onEdit = (targetId, newContent) => {\n    setTodo(\n      todo.map((it) =>\n        it.plan_id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className={styles.TodoPage}>\n      <Header dateId={dateId} />\n      <TodoEditor onCreate={onCreate} />\n      <TodoList\n        todo={todo}\n        onUpdate={onUpdate}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    </div>\n  );\n}\n\nexport default TodoPage;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMM,KAAK,GAAGP,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACW,QAAQ,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMC,QAAQ,GAAIC,OAAO,IAAK;IAC5B,MAAMC,OAAO,GAAG;MACdC,OAAO,EAAEP,KAAK,CAACQ,OAAO;MACtBH,OAAO;MACPI,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;IAC3B,CAAC;IACDV,OAAO,CAAC,CAACI,OAAO,EAAE,GAAGL,IAAI,CAAC,CAAC;IAC3BD,KAAK,CAACQ,OAAO,EAAE;EACjB,CAAC;;EAED;EACA,MAAMK,QAAQ,GAAIC,QAAQ,IAAK;IAC7BZ,OAAO,CACLD,IAAI,CAACc,GAAG,CAAEC,EAAE,IACVA,EAAE,CAACT,OAAO,KAAKO,QAAQ,GAAG;MAAE,GAAGE,EAAE;MAAEP,UAAU,EAAE,CAACO,EAAE,CAACP;IAAW,CAAC,GAAGO,EACpE,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIH,QAAQ,IAAK;IAC7BZ,OAAO,CAACD,IAAI,CAACiB,MAAM,CAAEF,EAAE,IAAKA,EAAE,CAACT,OAAO,KAAKO,QAAQ,CAAC,CAAC;EACvD,CAAC;;EAED;EACA,MAAMK,MAAM,GAAGA,CAACL,QAAQ,EAAEM,UAAU,KAAK;IACvClB,OAAO,CACLD,IAAI,CAACc,GAAG,CAAEC,EAAE,IACVA,EAAE,CAACT,OAAO,KAAKO,QAAQ,GAAG;MAAE,GAAGE,EAAE;MAAEX,OAAO,EAAEe;IAAW,CAAC,GAAGJ,EAC7D,CACF,CAAC;EACH,CAAC;EAED,oBACEpB,OAAA;IAAKyB,SAAS,EAAE9B,MAAM,CAACM,QAAS;IAAAyB,QAAA,gBAC9B1B,OAAA,CAACR,MAAM;MAACW,MAAM,EAAEA;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1B9B,OAAA,CAACP,UAAU;MAACe,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC9B,OAAA,CAACN,QAAQ;MACPW,IAAI,EAAEA,IAAK;MACXY,QAAQ,EAAEA,QAAS;MACnBI,QAAQ,EAAEA,QAAS;MACnBE,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CApDQD,QAAQ;EAAA,QACIH,SAAS;AAAA;AAAAiC,EAAA,GADrB9B,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}