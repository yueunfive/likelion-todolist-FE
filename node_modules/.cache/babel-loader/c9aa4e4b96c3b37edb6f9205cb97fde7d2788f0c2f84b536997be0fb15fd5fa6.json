{"ast":null,"code":"import _slicedToArray from\"/Users/yueun-oh/Desktop/likelion-todolist.js/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Emoji from\"./Emoji\";import styles from\"./TodoItem.module.css\";import{useState,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoItem=function TodoItem(_ref){var _id=_ref._id,content=_ref.content,is_checked=_ref.is_checked,date=_ref.date,emoji=_ref.emoji,onCheck=_ref.onCheck,onDelete=_ref.onDelete,onEdit=_ref.onEdit,onReview=_ref.onReview;var onChangeCheckbox=function onChangeCheckbox(){onCheck(_id);};var onClickDelete=function onClickDelete(){onDelete(_id);};var style1={color:\"black\"};var style2={color:\"gray\",textDecorationLine:\"line-through\"};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],setIsEdit=_useState2[1];// isEdit ? 수정중 : 수정중 X\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),feel=_useState4[0],setFeel=_useState4[1];var _useState5=useState(emoji),_useState6=_slicedToArray(_useState5,2),emojiSelection=_useState6[0],setEmojiSelection=_useState6[1];var onSelectEmoji=function onSelectEmoji(selectedEmoji){setEmojiSelection(selectedEmoji);// 선택한 이모지를 상태로 관리\nonReview(_id,selectedEmoji);setFeel(false);// 이모지 목록 숨기기\n};var toggleIsEdit=function toggleIsEdit(){return setIsEdit(!isEdit);};// 수정 입력창에 적은 데이터\n// 수정버튼 클릭 -> 일기 본문에 적혀져있던 content값이 나오도록 초기값 설정\nvar _useState7=useState(content),_useState8=_slicedToArray(_useState7,2),localContent=_useState8[0],setLocalContent=_useState8[1];var localContentInput=useRef();// 수정 취소 버튼을 눌렀을 때 실행되는 함수\n// 수정 -> 수정취소 -> 수정 : 원래 content값이 나오도록 하는 함수(초기화)\nvar handleQuitEdit=function handleQuitEdit(){setIsEdit(false);setLocalContent(content);// 수정입력창에 적은 데이터를 원래 일기 본문 데이터로 초기화\n};// 수정 완료 버튼을 눌렀을 떄 실행되는 함수\nvar handleEdit=function handleEdit(){// 수정한 데이터의 길이가 1글자 미만시 수정입력창 focus\nif(localContent.length<1){localContentInput.current.focus();return;}onEdit(_id,localContent);// _id(타겟아이디), localContent(새로 바뀌는 컨텐츠)를 onEdit 함수에 인자로 전달\ntoggleIsEdit();// isEdit를 true에서 false로 반환시켜서 수정폼을 닫기.\n};// enter 키를 눌러 수정 완료하기\nvar onKeyDown=function onKeyDown(e){if(e.keyCode===13){handleEdit();}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.TodoItem,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.checkbox_col,children:/*#__PURE__*/_jsx(\"input\",{onChange:onChangeCheckbox,checked:is_checked,type:\"checkbox\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.title_col,children:/*#__PURE__*/_jsx(\"span\",{style:is_checked?style2:style1,children:isEdit?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"textarea\",{ref:localContentInput,value:localContent,onChange:function onChange(e){setLocalContent(e.target.value);},onKeyDown:onKeyDown})}):/*#__PURE__*/_jsx(_Fragment,{children:content})})}),/*#__PURE__*/_jsx(\"div\",{className:styles.btn_col,children:isEdit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleQuitEdit,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEdit,children:\"\\uC644\\uB8CC\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return setFeel(!feel);},children:[emojiSelection===\"\"?\"감정\":emojiSelection,feel&&/*#__PURE__*/_jsx(Emoji,{onSelectEmoji:onSelectEmoji})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleIsEdit,children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClickDelete,children:\"\\uC0AD\\uC81C\"})]})})]});};export default TodoItem;","map":{"version":3,"names":["Emoji","styles","useState","useRef","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TodoItem","_ref","_id","content","is_checked","date","emoji","onCheck","onDelete","onEdit","onReview","onChangeCheckbox","onClickDelete","style1","color","style2","textDecorationLine","_useState","_useState2","_slicedToArray","isEdit","setIsEdit","_useState3","_useState4","feel","setFeel","_useState5","_useState6","emojiSelection","setEmojiSelection","onSelectEmoji","selectedEmoji","toggleIsEdit","_useState7","_useState8","localContent","setLocalContent","localContentInput","handleQuitEdit","handleEdit","length","current","focus","onKeyDown","e","keyCode","className","children","checkbox_col","onChange","checked","type","title_col","style","ref","value","target","btn_col","onClick"],"sources":["/Users/yueun-oh/Desktop/likelion-todolist.js/client/src/component/TodoItem.jsx"],"sourcesContent":["import Emoji from \"./Emoji\";\nimport styles from \"./TodoItem.module.css\";\nimport { useState, useRef } from \"react\";\n\nconst TodoItem = ({\n  _id,\n  content,\n  is_checked,\n  date,\n  emoji,\n  onCheck,\n  onDelete,\n  onEdit,\n  onReview,\n}) => {\n  const onChangeCheckbox = () => {\n    onCheck(_id);\n  };\n\n  const onClickDelete = () => {\n    onDelete(_id);\n  };\n\n  let style1 = { color: \"black\" };\n  let style2 = { color: \"gray\", textDecorationLine: \"line-through\" };\n\n  const [isEdit, setIsEdit] = useState(false); // isEdit ? 수정중 : 수정중 X\n  const [feel, setFeel] = useState(false);\n  const [emojiSelection, setEmojiSelection] = useState(emoji);\n\n  const onSelectEmoji = (selectedEmoji) => {\n    setEmojiSelection(selectedEmoji); // 선택한 이모지를 상태로 관리\n    onReview(_id, selectedEmoji);\n    setFeel(false); // 이모지 목록 숨기기\n  };\n\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n\n  // 수정 입력창에 적은 데이터\n  // 수정버튼 클릭 -> 일기 본문에 적혀져있던 content값이 나오도록 초기값 설정\n  const [localContent, setLocalContent] = useState(content);\n\n  const localContentInput = useRef();\n\n  // 수정 취소 버튼을 눌렀을 때 실행되는 함수\n  // 수정 -> 수정취소 -> 수정 : 원래 content값이 나오도록 하는 함수(초기화)\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content); // 수정입력창에 적은 데이터를 원래 일기 본문 데이터로 초기화\n  };\n\n  // 수정 완료 버튼을 눌렀을 떄 실행되는 함수\n  const handleEdit = () => {\n    // 수정한 데이터의 길이가 1글자 미만시 수정입력창 focus\n    if (localContent.length < 1) {\n      localContentInput.current.focus();\n      return;\n    }\n    onEdit(_id, localContent); // _id(타겟아이디), localContent(새로 바뀌는 컨텐츠)를 onEdit 함수에 인자로 전달\n    toggleIsEdit(); // isEdit를 true에서 false로 반환시켜서 수정폼을 닫기.\n  };\n\n  // enter 키를 눌러 수정 완료하기\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      handleEdit();\n    }\n  };\n\n  return (\n    <div className={styles.TodoItem}>\n      <div className={styles.checkbox_col}>\n        <input\n          onChange={onChangeCheckbox}\n          checked={is_checked}\n          type=\"checkbox\"\n        />\n      </div>\n      <div className={styles.title_col}>\n        <span style={is_checked ? style2 : style1}>\n          {/* isEdit ? 수정 입력창 : 원래 content값 */}\n          {isEdit ? (\n            <>\n              <textarea\n                ref={localContentInput}\n                value={localContent}\n                onChange={(e) => {\n                  setLocalContent(e.target.value);\n                }}\n                onKeyDown={onKeyDown}\n              />\n            </>\n          ) : (\n            <>{content}</>\n          )}\n        </span>\n      </div>\n\n      <div className={styles.btn_col}>\n        {isEdit ? (\n          <>\n            {/* 수정버튼을 눌렀을 때(isEdit === true)의 버튼들 */}\n            <button onClick={handleQuitEdit}>취소</button>\n            <button onClick={handleEdit}>완료</button>\n          </>\n        ) : (\n          <>\n            {/* 수정중이 아닐떄의 버튼들 */}\n            <button onClick={() => setFeel(!feel)}>\n              {emojiSelection === \"\" ? \"감정\" : emojiSelection}\n              {feel && <Emoji onSelectEmoji={onSelectEmoji} />}\n            </button>\n            <button onClick={toggleIsEdit}>수정</button>\n            <button onClick={onClickDelete}>삭제</button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default TodoItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}