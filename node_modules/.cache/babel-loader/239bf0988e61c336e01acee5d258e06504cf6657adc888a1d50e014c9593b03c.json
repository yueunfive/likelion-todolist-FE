{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/toy-project/todolist_API/src/pages/TodoPage.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../component/Header\";\nimport TodoEditor from \"../component/TodoEditor\";\nimport TodoList from \"../component/TodoList\";\nimport styles from \"./TodoPage.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoPage() {\n  _s();\n  const {\n    dateId\n  } = useParams(); // url의 \":dateId\" 부분에서 날짜 따옴\n  const [todo, setTodo] = useState([]); // 일정 데이터(일정 받아오기로 초기값 넣자..)\n\n  // 일정 받아오기\n  const resTodo = async () => {\n    const month = parseInt(localStorage.getItem(\"month\")); // parseInt : 문자열 -> 숫자\n    const day = parseInt(localStorage.getItem(\"day\"));\n    axios.get(`http://toodoolist.shop/api/plans/{user_id}?month=${month}&day=${day}`).then(response => {\n      console.log(response.data);\n      setTodo(response.data);\n    }).catch(error => {\n      console.error(\"에러 발생:\", error);\n    });\n  };\n  useEffect(() => {\n    resTodo();\n  }, []); // 마운트 될 때 한 번만 실행\n\n  // 아이템 추가 함수(일정 작성)\n  const onCreate = async content => {\n    const userId = localStorage.getItem(\"userId\");\n    try {\n      const response = await axios.post(`http://toodoolist.shop/api/plans/${userId}`, {\n        date: new Date().toISOString(),\n        // ISO 8601 형식으로 변환\n        content: content\n      });\n      setTodo([response.data, ...todo]);\n    } catch (error) {\n      console.error(\"POST 요청 실패:\", error);\n    }\n  };\n\n  // 아이템 체크 함수(일정 완료)\n  const onUpdate = targetId => {\n    setTodo(todo.map(it => it.plan_id === targetId ? {\n      ...it,\n      is_checked: !it.is_checked\n    } : it));\n  };\n\n  // 아이템 삭제 함수(일정 삭제)\n  const onDelete = targetId => {\n    setTodo(todo.filter(it => it.plan_id !== targetId));\n  };\n\n  // 아이템 수정 함수\n  const onEdit = (targetId, newContent) => {\n    setTodo(todo.map(it => it.plan_id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TodoPage,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      dateId: dateId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate,\n      onDelete: onDelete,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoPage, \"reMbiEWv/hBtki9kxvhrNftBj7M=\", false, function () {\n  return [useParams];\n});\n_c = TodoPage;\nexport default TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["Header","TodoEditor","TodoList","styles","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","TodoPage","_s","dateId","todo","setTodo","resTodo","month","parseInt","localStorage","getItem","day","get","then","response","console","log","data","catch","error","onCreate","content","userId","post","date","Date","toISOString","onUpdate","targetId","map","it","plan_id","is_checked","onDelete","filter","onEdit","newContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/toy-project/todolist_API/src/pages/TodoPage.jsx"],"sourcesContent":["import Header from \"../component/Header\";\nimport TodoEditor from \"../component/TodoEditor\";\nimport TodoList from \"../component/TodoList\";\nimport styles from \"./TodoPage.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction TodoPage() {\n  const { dateId } = useParams(); // url의 \":dateId\" 부분에서 날짜 따옴\n  const [todo, setTodo] = useState([]); // 일정 데이터(일정 받아오기로 초기값 넣자..)\n\n  // 일정 받아오기\n  const resTodo = async () => {\n    const month = parseInt(localStorage.getItem(\"month\")); // parseInt : 문자열 -> 숫자\n    const day = parseInt(localStorage.getItem(\"day\"));\n    axios\n      .get(\n        `http://toodoolist.shop/api/plans/{user_id}?month=${month}&day=${day}`\n      )\n      .then((response) => {\n        console.log(response.data);\n        setTodo(response.data);\n      })\n      .catch((error) => {\n        console.error(\"에러 발생:\", error);\n      });\n  };\n\n  useEffect(() => {\n    resTodo();\n  }, []); // 마운트 될 때 한 번만 실행\n\n  // 아이템 추가 함수(일정 작성)\n  const onCreate = async (content) => {\n    const userId = localStorage.getItem(\"userId\");\n\n    try {\n      const response = await axios.post(\n        `http://toodoolist.shop/api/plans/${userId}`,\n        {\n          date: new Date().toISOString(), // ISO 8601 형식으로 변환\n          content: content,\n        }\n      );\n      setTodo([response.data, ...todo]);\n    } catch (error) {\n      console.error(\"POST 요청 실패:\", error);\n    }\n  };\n\n  // 아이템 체크 함수(일정 완료)\n  const onUpdate = (targetId) => {\n    setTodo(\n      todo.map((it) =>\n        it.plan_id === targetId ? { ...it, is_checked: !it.is_checked } : it\n      )\n    );\n  };\n\n  // 아이템 삭제 함수(일정 삭제)\n  const onDelete = (targetId) => {\n    setTodo(todo.filter((it) => it.plan_id !== targetId));\n  };\n\n  // 아이템 수정 함수\n  const onEdit = (targetId, newContent) => {\n    setTodo(\n      todo.map((it) =>\n        it.plan_id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className={styles.TodoPage}>\n      <Header dateId={dateId} />\n      <TodoEditor onCreate={onCreate} />\n      <TodoList\n        todo={todo}\n        onUpdate={onUpdate}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    </div>\n  );\n}\n\nexport default TodoPage;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC;EACA,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvD,MAAMC,GAAG,GAAGH,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjDZ,KAAK,CACFc,GAAG,CACD,oDAAmDL,KAAM,QAAOI,GAAI,EACvE,CAAC,CACAE,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BZ,OAAO,CAACS,QAAQ,CAACG,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdU,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMc,QAAQ,GAAG,MAAOC,OAAO,IAAK;IAClC,MAAMC,MAAM,GAAGb,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAACyB,IAAI,CAC9B,oCAAmCD,MAAO,EAAC,EAC5C;QACEE,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAAE;QAChCL,OAAO,EAAEA;MACX,CACF,CAAC;MACDhB,OAAO,CAAC,CAACS,QAAQ,CAACG,IAAI,EAAE,GAAGb,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAMQ,QAAQ,GAAIC,QAAQ,IAAK;IAC7BvB,OAAO,CACLD,IAAI,CAACyB,GAAG,CAAEC,EAAE,IACVA,EAAE,CAACC,OAAO,KAAKH,QAAQ,GAAG;MAAE,GAAGE,EAAE;MAAEE,UAAU,EAAE,CAACF,EAAE,CAACE;IAAW,CAAC,GAAGF,EACpE,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAIL,QAAQ,IAAK;IAC7BvB,OAAO,CAACD,IAAI,CAAC8B,MAAM,CAAEJ,EAAE,IAAKA,EAAE,CAACC,OAAO,KAAKH,QAAQ,CAAC,CAAC;EACvD,CAAC;;EAED;EACA,MAAMO,MAAM,GAAGA,CAACP,QAAQ,EAAEQ,UAAU,KAAK;IACvC/B,OAAO,CACLD,IAAI,CAACyB,GAAG,CAAEC,EAAE,IACVA,EAAE,CAACC,OAAO,KAAKH,QAAQ,GAAG;MAAE,GAAGE,EAAE;MAAET,OAAO,EAAEe;IAAW,CAAC,GAAGN,EAC7D,CACF,CAAC;EACH,CAAC;EAED,oBACE9B,OAAA;IAAKqC,SAAS,EAAE3C,MAAM,CAACO,QAAS;IAAAqC,QAAA,gBAC9BtC,OAAA,CAACT,MAAM;MAACY,MAAM,EAAEA;IAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1B1C,OAAA,CAACR,UAAU;MAAC4B,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC1C,OAAA,CAACP,QAAQ;MACPW,IAAI,EAAEA,IAAK;MACXuB,QAAQ,EAAEA,QAAS;MACnBM,QAAQ,EAAEA,QAAS;MACnBE,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxC,EAAA,CA9EQD,QAAQ;EAAA,QACIJ,SAAS;AAAA;AAAA8C,EAAA,GADrB1C,QAAQ;AAgFjB,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}